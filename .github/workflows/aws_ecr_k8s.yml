name: Deploy to AWS EKS
on: 
  workflow_dispatch
defaults:
  run:
    working-directory: application
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
     - name: Get current date
       id: getTimestamp
       run: echo "::set-output name=timestamp::$(date -u +%Y%m%d-%H%M)"

     - name: Checkout
       uses: actions/checkout@v2

     - name: Generate pod deploy yaml
       id: generatePodDeployYML
       env:
          IMAGE_TAG: ${{steps.getTimestamp.outputs.timestamp}}
       run: | 
           kubectl aplly -f deployment.yml
           kubectl aplly -f service.yml
    
     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION_ID }}

     - name: Login to AWS ECR
       id: loginECR
       uses: aws-actions/amazon-ecr-login@v1

     - name: Build, tag, and push image to Amazon ECR
       id: build-image
       env:
          ECR_REGISTRY: ${{ steps.loginECR.outputs.registry }}
          ECR_REPOSITORY: yura/devops4
          AWS_REGION: ${{ secrets.AWS_REGION_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION_ID }}

       run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -f application/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY . 
          docker push $ECR_REGISTRY/$ECR_REPOSITORY
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY"
